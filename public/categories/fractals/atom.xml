<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: fractals | labs.zd]]></title>
  <link href="http://labs.zacharydenton.com/categories/fractals/atom.xml" rel="self"/>
  <link href="http://labs.zacharydenton.com/"/>
  <updated>2012-05-13T22:54:34-04:00</updated>
  <id>http://labs.zacharydenton.com/</id>
  <author>
    <name><![CDATA[Zach Denton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[WebGL Fractals]]></title>
    <link href="http://labs.zacharydenton.com/webgl-fractals/"/>
    <updated>2012-05-13T19:45:00-04:00</updated>
    <id>http://labs.zacharydenton.com/webgl-fractals</id>
    <content type="html"><![CDATA[<div id="container"></div>




<!-- Shaders -->


<script id="per-fragment-lighting-vs" type="x-shader/x-vertex">
    attribute vec3 aVertexPosition;
    attribute vec3 aVertexNormal;
    attribute vec2 aTextureCoord;

    uniform mat4 uMVMatrix;
    uniform mat4 uPMatrix;
    uniform mat3 uNMatrix;

    varying vec2 vTextureCoord;
    varying vec3 vTransformedNormal;
    varying vec4 vPosition;

    void main(void) {
        vPosition = uMVMatrix * vec4(aVertexPosition, 1.0);
        gl_Position = uPMatrix * vPosition;
        vTextureCoord = aTextureCoord;
        vTransformedNormal = uNMatrix * aVertexNormal;
    }
</script>


<script type="x-shader/x-fragment" id="fragmentshader">
    varying vec2 vTextureCoord;

    void main() {
        gl_FragColor = vec4(1.0, 1.0, 1.0, 0.0);
    }
</script>


<!-- End Shaders -->


<script type="text/javascript" src="../src/webgl-fractals/fractals.js"></script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Distance Field Raymarcher]]></title>
    <link href="http://labs.zacharydenton.com/distance-field-raymarcher/"/>
    <updated>2012-05-13T17:35:00-04:00</updated>
    <id>http://labs.zacharydenton.com/distance-field-raymarcher</id>
    <content type="html"><![CDATA[<h2>Description</h2>

<p>This is an implementation of a raymarcher in processing.js. I'm using it here to render 3-dimensional fractals defined by distance field functions. Depending on the speed of your computer, this may take a while to render.</p>

<h2>Tools Used</h2>

<ul>
<li><a href="http://processingjs.org/">Processing.js</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mandelbrot Set]]></title>
    <link href="http://labs.zacharydenton.com/mandelbrot/"/>
    <updated>2012-05-11T22:47:00-04:00</updated>
    <id>http://labs.zacharydenton.com/mandelbrot</id>
    <content type="html"><![CDATA[<h2>Description</h2>

<p>A visualization of the Mandelbrot set written with processing.js. The color
palette changes slowly over time to give an additional sense of the
complexity of the M-Set.</p>

<p>Left mouse button zooms in; right mouse button zooms out; middle
mouse button resets the zoom. Spacebar doubles iteration count (to increase detail).</p>

<h2>Tools Used</h2>

<ul>
<li><a href="http://processingjs.org/">Processing.js</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
